{"remainingRequest":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\zw-player\\player.vue?vue&type=style&index=0&id=9d425874&scoped=true&lang=css&","dependencies":[{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\zw-player\\player.vue","mtime":1591513204819},{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1591235080393},{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1591235131543},{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1591235112791},{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591235073143},{"path":"E:\\Lucinao\\FontCode\\my-blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1591235131525}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgdXJsKCcuL3BsYXllci5jc3MnKTsNCkBpbXBvcnQgdXJsKCcuL3BsYXllcm1vYmlsZS5jc3MnKTsNCg=="},{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8cA;AACA","file":"player.vue","sourceRoot":"node_modules/zw-player","sourcesContent":["<template>\r\n    <div>\r\n        <transition name=\"dis_list\">\r\n            <div class=\"list_box\" v-if=\"listIsDis\">\r\n                <transition name=\"music_alert\">\r\n                    <span class=\"music_alert\" v-if=\"musicAlertState\">{{musicAlertVal}}</span>\r\n                </transition>\r\n                <div class=\"list_close\" @click=\"DisList\">x</div>\r\n                <div class=\"music_list\">\r\n                    <div class=\"list_l\">\r\n                        <ul class=\"music_type\">\r\n                            <li v-for=\"item in musicTypeList\" @click=\"_getMusicType(item.id)\" :class=\"{type_active:item.id==thisMusicType}\">{{item.name}}</li>\r\n                        </ul>\r\n                        <div class=\"list_title\">\r\n                            <span style=\"font-size: 14px;\">歌曲列表</span>\r\n                            <img :src=\"musicStateButton\" alt=\"\" class=\"music_state\" @click=\"MusicStateChange\">\r\n                            <div class=\"music_search_box\">\r\n                                <input type=\"text\" class=\"music_search\" v-model=\"musicSearchVal\" placeholder=\"搜索歌曲\">\r\n                                <transition name=\"music_search\">\r\n                                    <ul  class=\"search_list\" v-if=\"musicSearchVal!=''\">\r\n                                        <li v-for=\"item in musicSearchList\" @click=\"ListAdd(item)\">\r\n                                            <span class=\"music_search_name\">{{item.name}}</span>\r\n                                            <span class=\"music_search_ar\">{{item.artists[0].name}}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </transition>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"music_ul_title\">\r\n                            <span>歌曲</span><span>歌手</span><span>专辑</span>\r\n                        </div>\r\n                        <ul class=\"list\">\r\n                            <li v-for=\"(item,index) in thisMusicList\" @mouseover=\"ButtonActive(index)\" @dblclick=\"ListPlay((thisListPage-1)*10+index)\">\r\n                                <div class=\"this_music_shlter\" v-if=\"(thisListPage-1)*10+index==thisMusicIndex\"></div>\r\n                                <span>{{item.name}}</span><span>{{item.ar[0].name}}</span><span>{{item.al.name}}</span>\r\n                                <transition name=\"list_button\">\r\n                                    <div class=\"music_button\" v-if=\"listButtonActiveIndex==index\">\r\n                                        <div class=\"list_play\" title=\"播放这首歌\" :style=\"{backgroundImage:'url('+listPlay+')'}\" @click=\"ListPlay((thisListPage-1)*10+index)\"></div>\r\n                                        <div class=\"list_play\" title=\"添加到 My Songs\" :style=\"{backgroundImage:'url('+add+')'}\" @click=\"ListAdd(item)\" v-if=\"thisMusicType!=-1\"></div>\r\n                                    </div>\r\n                                </transition>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"list_page\">\r\n                            <div class=\"page_last\" v-if=\"thisListPage!=1\"  @click=\"ListChange(true)\"><</div>\r\n                            <div class=\"page_next\"  v-if=\"thisListPage!=Math.ceil(musicList.length/10)\" @click=\"ListChange(false)\">></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"list_r\">\r\n                        <img class=\"music_list_bg\" :src=\"musicImg\"></img>\r\n                        <div class=\"music_list_shlter\" :style=\"{backgroundImage:'url('+shlter+')'}\"></div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n        <div class=\"bbox\">\r\n            <div class=\"pan\" :style=\"{backgroundImage:'url('+pan+')'}\" :class=\"{pan_active:disActive}\" @click=\"DisActive\">\r\n                <img :src=\"musicImg\" alt=\"\" class=\"pan_c\">\r\n            </div>\r\n            <div class=\"box\" :style=\"{backgroundImage:'url('+musicImg+')'}\" :class=\"{box_active:disActive}\" @dblclick=\"DisList\">\r\n                <div class=\"music_shlter_2\" :style=\"{backgroundImage:'url('+musicImg+')'}\" :class=\"{shlter_active:disActive}\"></div>\r\n                <div class=\"music_shlter\" :style=\"{backgroundImage:'url('+musicImg+')'}\" :class=\"{shlter_active:disActive}\"></div>\r\n                <div class=\"music_dis\">\r\n                    <div class=\"dis_list\" @click=\"DisList\">···</div>\r\n                    <p class=\"music_title\">{{musicTitle}}</p>\r\n                    <p class=\"music_intro\">歌手: {{musicName}}</p>\r\n                    <ul class=\"music_words\">\r\n                        <div class=\"music_words_box\" :style=\"{top:wordsTop+'px'}\">  \r\n                            <li v-for=\"(item,index) in musicWords\" class=\"music_word\" :class=\"{word_highlight:wordIndex==index}\">{{item}}</li>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"control_box\">\r\n                    <div class=\"control_button\">\r\n                        <img :src=\"playIcon\" alt=\"\" class=\"control_icon\">\r\n                    </div>\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress_c\" :style=\"{width:currentProgress}\">\r\n                            <div class=\"progress_circle\">\r\n                                <div class=\"progress_circle_c\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    \r\n                    <video id=\"music\" autoplay=\"autoplay\" :src=\"musicUrl\" name=\"media\">\r\n                    </video>\r\n                    \r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nimport { getWords,getMusicInfo,getMusicUrl,getHotMusic,getSearchSuggest } from './api/music'\r\nimport pan from './img/pan.png'\r\nimport play from './img/play.png'\r\nimport pause from './img/pause.png'\r\nimport add from './img/add.png'\r\nimport shlter from './img/list_pan.png'\r\nimport listPlay from './img/list_play_hover.png'\r\nimport state0 from './img/state_0.png'\r\nimport state1 from './img/state_1.png'\r\nimport $ from 'jquery'\r\nexport default {\r\n    name:'Player',\r\n    data() {\r\n        return {\r\n            o:0,\r\n            top:0,\r\n            pan,\r\n            play,\r\n            pause,\r\n            add,\r\n            shlter,\r\n            listPlay,\r\n            state0,\r\n            state1,\r\n            playState:true,\r\n            playIcon:pause,\r\n            musicImg:'',\r\n            musicUrl:'',\r\n            musicWords:[],\r\n            musicTitle:'',\r\n            musicName:'',\r\n            wordsTime:[],\r\n            wordsTop:0,\r\n            wordIndex:0,\r\n            currentProgress:'0%',\r\n            musicList:[],\r\n            myMusicList:[],   //存储在本地   可以开始判断有没有 让用户一开始就听这个列表\r\n            thisMusicIndex:1,\r\n            disActive:false,\r\n            listIsDis:false,\r\n            listButtonActiveIndex:-1,\r\n            thisListPage:1,\r\n            musicTypeList:[\r\n                {name:'热歌榜',id:1},\r\n                {name:'新歌榜',id:0},\r\n                {name:'飙升榜',id:3},\r\n                {name:'嘻哈榜',id:18},\r\n                {name:'My Songs',id:-1}\r\n            ],\r\n            thisMusicType:-1,\r\n            notPlay:[],\r\n            musicState:0, //0列表循环  1单曲循环\r\n            musicStateButton:state1,\r\n            musicSearchVal:'',\r\n            musicSearchList:[],\r\n            musicAlertVal:'',\r\n            musicAlertState:false,\r\n            musicAlertTimer:''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.Player();\r\n        \r\n        \r\n    },\r\n    created() {\r\n        this._getMusicType(1);\r\n        this.DisAuthorInfo();//禁删~感谢配合\r\n    },\r\n    computed: {\r\n        thisMusicList(){\r\n            return [...this.musicList].splice((this.thisListPage-1)*10,10);  //分页\r\n        },\r\n        \r\n    },\r\n    watch: {\r\n        musicSearchVal(){\r\n            if(this.musicSearchVal==''){\r\n                this.musicSearchList=[];\r\n            }else{\r\n                getSearchSuggest(this.musicSearchVal).then((res)=>{\r\n                    if(res.data.result.songs==undefined){\r\n                        this.musicSearchList=[];\r\n                    }else{\r\n                        this.musicSearchList=res.data.result.songs;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        //禁删~感谢配合\r\n        DisAuthorInfo(){\r\n            console.log(\"%c音乐播放器作者----仲威，博客地址：https://blogme.top\", \"background-color:rgb(30,30,30);border-radius:4px;font-size:12px;padding:4px;color:rgb(220,208,129);\");\r\n        },\r\n        MusicAlert(val){\r\n            this.musicAlertState=true;\r\n            this.musicAlertVal=val;\r\n            clearTimeout(this.musicAlertTimer);\r\n            this.musicAlertTimer=setTimeout(()=>{\r\n                this.musicAlertState=false;\r\n                this.musicAlertVal='';\r\n            },2000);\r\n        },\r\n        ListAdd(obj){\r\n            getMusicInfo(obj.id).then((res)=>{\r\n                this.musicSearchVal='';\r\n                if(this.myMusicList.length==0){\r\n                    this.myMusicList=[res.data.songs[0]];\r\n                    this._getMusicType(-1);\r\n                    //第一次搜索直接播放\r\n                }else{\r\n                    this.myMusicList.push(res.data.songs[0]);\r\n                    //提示已经添加进去\r\n                    \r\n                }\r\n                this.MusicAlert('添加成功');\r\n            })\r\n        },\r\n        MusicStateChange(){\r\n            if(this.musicState==0){\r\n                this.musicState=1;\r\n                this.musicStateButton=this.state0;\r\n                this.MusicAlert('已切换为单曲循环模式');\r\n            }else{\r\n                this.musicState=0;\r\n                this.musicStateButton=this.state1;\r\n                this.MusicAlert('已切换为列表循环模式');\r\n            }\r\n        },\r\n        DisList(){\r\n            this.listIsDis=this.listIsDis ? false : true;\r\n        },\r\n        ListChange(isLast){\r\n            if(isLast){\r\n                this.thisListPage--;\r\n            }else{\r\n                this.thisListPage++;\r\n            }\r\n        },\r\n        ListPlay(id){   \r\n            if(this.thisMusicIndex!=id){\r\n                this.thisMusicIndex=id>this.musicList.length-1 ? 0 : id;\r\n                this._getInfo();\r\n                this.top=0;\r\n                this.o=0;\r\n                this.wordIndex=0;\r\n                this.wordsTop=0;\r\n                this.currentProgress='0%';\r\n                if(!this.playState){\r\n                    $('.control_icon').click();\r\n                }\r\n            }\r\n        },\r\n        ButtonActive(id){\r\n            this.listButtonActiveIndex=id;\r\n        },\r\n        DisActive(){\r\n            this.disActive=this.disActive ? false : true;\r\n        },\r\n        _getMusicType(id){\r\n            if(this.thisMusicType!=id){\r\n                this.notPlay=[];\r\n                if(id==-1){\r\n                    if(this.myMusicList.length!=0){\r\n                        this.musicList=this.myMusicList;\r\n                        this.thisMusicType=id;\r\n                        this.thisMusicIndex=0;\r\n                        this.thisListPage=1;\r\n                        this._getInfo();\r\n                        this.top=0;\r\n                        this.o=0;\r\n                        this.wordIndex=0;\r\n                        this.wordsTop=0;\r\n                        this.currentProgress='0%';\r\n                        if(!this.playState){\r\n                            $('.control_icon').click();\r\n                        }\r\n                    }else{//自定义库没有歌曲 提示需要搜索才可以添加\r\n                        this.MusicAlert('没有歌曲,需要自己添加');\r\n                    }\r\n                    \r\n                }else{\r\n                    getHotMusic(id).then((res)=>{\r\n                        this.musicList=res.data.playlist.tracks.splice(0,200);\r\n                        this.thisMusicType=id;\r\n                        this.thisMusicIndex=0;\r\n                        this.thisListPage=1;\r\n                        this._getInfo();\r\n                        this.top=0;\r\n                        this.o=0;\r\n                        this.wordIndex=0;\r\n                        this.wordsTop=0;\r\n                        this.currentProgress='0%';\r\n                        if(!this.playState){\r\n                            $('.control_icon').click();\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _getInfo(){\r\n            getMusicUrl(this.musicList[this.thisMusicIndex].id).then((res)=>{\r\n                if(res.data.data[0].url==null || res.data.data[0].url=='' || res.data.data[0].url==undefined){\r\n                    if(this.notPlay.length!=this.musicList.length){\r\n\r\n                        let nextIndex=this.thisMusicIndex+1;\r\n                        if(this.notPlay.indexOf(this.thisMusicIndex)==-1){\r\n                            this.notPlay.push(this.thisMusicIndex);\r\n                        }\r\n                        this.MusicAlert(`${this.musicList[this.thisMusicIndex].name}因为一些原因不能播放`);\r\n                        this.ListPlay(nextIndex);//寻找下一首歌  直到找到\r\n                        \r\n                        //提示这首歌不能放\r\n                    }else{\r\n                        //遍历完没有找到\r\n                        console.log('not');\r\n                        this.MusicAlert('此列表所有歌都不能播放');\r\n                    }\r\n                }else{\r\n                    this.musicUrl=res.data.data[0].url.replace('http://','https://');\r\n                    this.musicImg=this.musicList[this.thisMusicIndex].al.picUrl.replace('http://','https://')+'?param=300y300';\r\n                    this.musicTitle=this.musicList[this.thisMusicIndex].name;\r\n                    let name_arr=[];\r\n                    this.musicList[this.thisMusicIndex].ar.forEach((i)=>{\r\n                        name_arr.push(i.name);\r\n                    })\r\n                    this.musicName=name_arr.join('/');\r\n                    getWords(this.musicList[this.thisMusicIndex].id).then((res)=>{\r\n                        if(!res.data.nolyric){\r\n                            let info=this.Cut(res.data.lrc.lyric);\r\n                            this.musicWords=info.wordArr;\r\n                            this.wordsTime=info.timeArr;  \r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        Ltrim(s){\r\n            return s.replace(/(^\\s*)/g, \"\");\r\n        },\r\n        Rtrim(s){\r\n            return s.replace(/(\\s*$)/g, \"\");\r\n        },\r\n        //歌词截取函数\r\n        Cut(str){\r\n            let timeArr=[];\r\n            let wordArr=[];\r\n            timeArr=str.split('[');\r\n            timeArr.splice(0,1);\r\n            for(let i=0;i<timeArr.length;i++){\r\n                let cut=timeArr[i].split(']');\r\n                let time=cut[0].split('.')[0].split(':');\r\n                timeArr[i]=Number.parseInt(time[0])*60+Number.parseInt(time[1]);\r\n                timeArr[i]=isNaN(timeArr[i]) ? 0 : timeArr[i]; //处理NaN\r\n                wordArr[i]=this.Rtrim(this.Ltrim(cut[1]));\r\n            }\r\n            return {timeArr:timeArr,wordArr:wordArr}\r\n        },\r\n        Player(){\r\n            let self=this;\r\n            let player=$('#music')[0];\r\n            let playerTimer=setInterval(timer,1000);\r\n            //定时器函数\r\n            $('body').on('click',()=>{\r\n                player.play();\r\n                $('body').unbind('click');\r\n                \r\n            })\r\n            function timer(){\r\n                self.currentProgress=`${(player.currentTime/player.duration)*100}%`\r\n                //接着这里写歌词滚动\r\n                if(player.currentTime>=self.wordsTime[self.o+1]){\r\n                    self.top+=Number.parseInt($('.music_word').eq(self.o).height()+Number.parseInt($('.music_word').eq(self.o).css('marginTop')));\r\n                    if(self.top>=$('.music_words').height()/2-11){  //开始滚动的高度\r\n                        self.wordsTop+=-Number.parseInt($('.music_word').eq(self.o).height()+Number.parseInt($('.music_word').eq(self.o).css('marginTop')));\r\n                    }\r\n                    self.wordIndex=self.o+1;\r\n                    self.o++;\r\n                }\r\n                if(player.currentTime>=player.duration){    //切歌\r\n                    if(self.musicList.length!=1){  //只有一首歌  重复播放\r\n                        if(self.musicState==0)\r\n                        {\r\n                            self.thisMusicIndex=self.thisMusicIndex>=self.musicList.length-1 ? 0 : self.thisMusicIndex+1;\r\n                            self._getInfo();\r\n                        }\r\n                    }\r\n                    player.play();\r\n                    self.top=0;\r\n                    self.o=0;\r\n                    self.wordIndex=0;\r\n                    self.wordsTop=0;\r\n                    self.currentProgress='0%';\r\n                }\r\n            }\r\n            //进度条控制\r\n            $('.progress').on('mousedown',(ev)=>{\r\n                let e=ev||event;\r\n                let pro=((e.clientX-$('.progress').offset().left)/$('.progress').width())\r\n                clearInterval(playerTimer);\r\n                this.currentProgress=`${pro*100}%`\r\n                $(document).on('mousemove',(ev)=>{\r\n                    let e=ev||event;\r\n                    pro=((e.clientX-$('.progress').offset().left)/$('.progress').width())\r\n                    this.currentProgress=`${pro*100}%`\r\n                })\r\n                $(document).on('mouseup',()=>{\r\n                    player.currentTime=player.duration*pro;\r\n                    let c_arr=[...this.wordsTime];\r\n                    c_arr.push(player.currentTime);\r\n                    c_arr.sort((l,r)=>{\r\n                        return l-r\r\n                    });\r\n                    let now_o=c_arr.indexOf(player.currentTime)-1;\r\n                    let diff_h=0;\r\n                    if(this.o<now_o){\r\n                        for(let i=this.o;i<now_o;i++){\r\n                            diff_h+=-Number.parseInt($('.music_word').eq(i).height()+Number.parseInt($('.music_word').eq(i).css('marginTop')))\r\n                        }\r\n                    }else{\r\n                        for(let i=now_o;i<this.o;i++){\r\n                            diff_h+=Number.parseInt($('.music_word').eq(i).height()+Number.parseInt($('.music_word').eq(i).css('marginTop')))\r\n                        }\r\n                    }\r\n                    this.wordsTop+=diff_h;\r\n                    self.wordIndex=this.o=now_o;\r\n                    clearInterval(playerTimer);\r\n                    playerTimer=setInterval(timer,1000);\r\n                    this.playState=true;\r\n                    this.playIcon=this.pause;\r\n                    if(player.currentTime>=player.duration){\r\n                        this.top=0;\r\n                        this.o=0;\r\n                        this.wordIndex=0;\r\n                        this.wordsTop=0;\r\n                        this.currentProgress='0%';\r\n                    }\r\n                    player.play();\r\n                    $(document).unbind('mousemove');\r\n                    $(document).unbind('mouseup');\r\n                })\r\n            })\r\n            //播放暂停按钮控制\r\n            $('.control_icon').on('click',()=>{\r\n                if(this.playState){\r\n                    player.pause();\r\n                    this.playState=false;\r\n                    this.playIcon=this.play;\r\n                    clearInterval(playerTimer);\r\n                }else{\r\n                    player.play();\r\n                    this.playState=true;\r\n                    this.playIcon=this.pause;\r\n                    clearInterval(playerTimer);\r\n                    playerTimer=setInterval(timer,1000);\r\n                }\r\n            });\r\n        },\r\n        Contorl(){\r\n            let player=$('#music')[0];\r\n            player.currentTime=100;\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n@import url('./player.css');\r\n@import url('./playermobile.css');\r\n</style>"]}]}